generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongodb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type GameMonsterStatsAtk {
  DEF GameMonsterStatsAtkDef
}

type GameMonsterStatsAtkDef {
  PWR String
}

type GameSpellStatsAtk {
  DEF GameSpellStatsAtkDef
}

type GameSpellStatsAtkDef {
  PWR String
}

model Archive {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  Archive_Date String @map("Archive Date")
  ArchiveDATA  String
  Archiver     String
  Image        String
  RecordID     String
  Review_Date  String @map("Review Date")
  Reviewer     String
  Upload_Date  String @map("Upload Date")
  Uploader     String
}

model Game {
  id                String               @id @default(auto()) @map("_id") @db.ObjectId
  Monster_Stats_ATK GameMonsterStatsAtk? @map("Monster Stats ATK")
  Monsters          String?
  Spell_Stats_ATK   GameSpellStatsAtk    @map("Spell Stats ATK")
  Spells            String
}

model Login {
  id               String @id @default(auto()) @map("_id") @db.ObjectId
  Archived_Records String @map("Archived Records")
  Email            String
  In_Game_Progress Float  @map("In-Game Progress")
  /// Multiple data types found: String: 85.7%, Int: 14.3% out of 7 sampled entries
  Password         String
  Uploaded_Records String @map("Uploaded Records")
  Username         String
}

model User {
	id    	String   @id @default(auto()) @map("_id") @db.ObjectId
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
	email 	String?  @unique
	//posts 	Post[]
	profile   Profile?
  }

 

  model Post {
	id    	String  @id @default(auto()) @map("_id") @db.ObjectId
	authorId  String 
	content   String?
	//email    String @unique
	
  }

 

  type Profile {
	firstName  	String
	lastName   	String
	maidenName 	String?
	profilePicture String?
	department 	Department?
  }

  enum Department {
	Marketing
	Sales
	Engineering

  }
